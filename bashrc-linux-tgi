# .bashrc

if [[ "$__bashrc_imported_flag" == "defined-${USER}" ]]; then
    return 0
fi
__bashrc_imported_flag="defined-${USER}"

# source global definitions (debian-based distros)
if [ -f /etc/bash.bashrc ]; then 
    . /etc/bash.bashrc
fi

# source the gapp bashrc
if [ -f /gapp/noarch/share/login/gapp.bashrc ]; then
    . /gapp/noarch/share/login/gapp.bashrc
fi

# source alias file
if [ -f ~/.bash_alias ]; then
    . ~/.bash_alias
fi

# Handle custom MGI/LSF docker environment setup
if [ -e /.dockerenv ]; then
    source /opt/lsf9/conf/profile.lsf
fi

# Useful Color Variables
GRAD1='\333\262\261\260'
GRAD2='\260\261\262\333'
YLOBRN='\[\033[01;33;43m\]'
WHTBRN='\[\033[01;37;43m\]'
REDBRN='\[\033[01;31;43m\]'
BLUBRN='\[\033[01;34;43m\]'
GRNBRN='\[\033[00;32;43m\]'
REDBLK='\[\033[00;31;40m\]'
PPLBLK='\[\033[01;35;40m\]'
WHTBLK='\[\033[01;37;40m\]'
NONE='\[\033[00m\]'
HBLK='\[\033[00;30;30m\]'
HBLU='\[\033[01;34;34m\]'

BLU='\[\033[01;34m\]'
YEL='\[\033[01;33m\]'
WHT='\[\033[01;37m\]'
PRPL='\[\033[00;35m\]'
RED='\[\033[01;31m\]'
GRN='\[\033[01;32m\]'          
GRN2='\[\033[02;32m\]'          
GRAY='\[\033[01;30m\]'
PINK='\[\033[01;35m\]'
NORM='\[\033[01;00;0m\]'
CYAN='\[\033[01;36m\]'

# colors via tput (only in an interactive terminal)
if [[ $- == *i* ]]; then
    reset=$(tput sgr0)
    bold=$(tput bold)
    grey=$(tput setaf 0)
    red=$(tput setaf 1)
    green=$(tput setaf 2)
    yellow=$(tput setaf 3)
    blue=$(tput setaf 4)
    magenta=$(tput setaf 5)
    cyan=$(tput setaf 6)
    white=$(tput setaf 7)

    xreset=$(tput -T xterm sgr0)
    xbold=$(tput -T xterm bold)
    xgrey=$(tput -T xterm setaf 0)
    xred=$(tput -T xterm setaf 1)
    xgreen=$(tput -T xterm setaf 2)
    xyellow=$(tput -T xterm setaf 3)
    xblue=$(tput -T xterm setaf 4)
    xmagenta=$(tput -T xterm setaf 5)
    xcyan=$(tput -T xterm setaf 6)
    xwhite=$(tput -T xterm setaf 7)
fi

export GRAD1 GRAD2 YLOBRN WHTBRN REDBRN GRNBRN REDBLK PPLBLK WHTBLK NONE HBLU BLU YEL WHT PRPL RED GRN GRN2 GRAY NORM CYAN BLUBRN HBLK PINK
 
# enable git completion niceties
source ~/.git-completion.bash

# enable bash history logging
source ~/.bash-preexec.sh
LOG_DIR=$HOME/.logs
preexec() {
    # don't log root enabled commands
    if [ "$(id -u)" -ne 0 ]; then
        CMD_LOG="$LOG_DIR/bash-history-$(date "+%Y-%m-%d").log"
        if [ ! -e "$CMD_LOG" ]; then
            touch $CMD_LOG
            chgrp info $CMD_LOG
            chmod 0664 $CMD_LOG
        fi
        echo "[$(date)] : $USER@$(hostname) : $(pwd) : $(history 1)" >> ${CMD_LOG}
    fi
}

# setup custom prompt
if [ "$TERM" = "eterm-color" ]; then
    # emacs prompt
    PS1='╭─( ${yellow}\w${reset}${red}$(__git_ps1 " (%s)")${reset} as ${green}\u${reset} at ${cyan}\h${reset} on ${yellow}\D{%m/%d} \t${reset} )\n╰─${bold}${red}\$${reset} '
else 
    # regular xterm prompt
    PS1='╭─\[${xreset}\]( \[${xyellow}\]\w\[${xred}\]$(__git_ps1 " (%s)")\[${xreset}\] as \[${xgreen}\]\u\[${xreset}\] at \[${xcyan}\]\h\[${xreset}\] on \[${xyellow}\]\D{%m/%d} \t\[${xreset}\] )\n╰─\[${xbold}\]\[${xred}\]$\[${xreset}\] '
fi

# enable the less command to display colors
LESS="-eiMXR"
export LESS

# commands beginning with one space don't get stored in .bash_history
export HISTIGNORE=' *'

# SET default EDITOR
export EDITOR="/gscuser/idas/software/neovim-v0.2.2/bin/nvim"

# customize PATH
export PATH=$HOME/.goenv/bin:$HOME/.Renv/bin:$HOME/.pyenv/bin:$HOME/.rbenv/bin:$HOME/.plenv/bin:/gscmnt/gc2802/halllab/idas/software/openssl-1.0.2i/bin:/gscmnt/gc2802/halllab/idas/software/curl-7.59.0/bin:/gscmnt/gc2802/halllab/idas/software/git/bin:$HOME/software/neovim-v0.2.2/bin:$HOME/software/emacs-25.3/bin:$HOME/software/cmake-3.11.1/bin:/bin:$PATH

# customize LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/gscmnt/gc2802/halllab/idas/software/zlib-1.2.11/lib:/gscmnt/gc2802/halllab/idas/software/openssl-1.0.2i/lib:/gscmnt/gc2802/halllab/idas/software/curl-7.59.0/lib:$LD_LIBRARY_PATH

# customize PKG_CONFIG_PATH
export PKG_CONFIG_PATH=/gscmnt/gc2802/halllab/idas/software/zlib-1.2.11/lib/pkgconfig:/gscmnt/gc2802/halllab/idas/software/openssl-1.0.2i/lib/pkgconfig:/gscmnt/gc2802/halllab/idas/software/curl-7.59.0/lib/pkgconfig:$PKG_CONFIG_PATH

# rbenv setup
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# pyenv setup
if which pyenv > /dev/null; then
    export PYENV_ROOT=$HOME/.pyenv
    eval "$(pyenv init -)";
fi

# pyenv virtualenv setup
if which pyenv > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# plenv setup
if which plenv > /dev/null; then eval "$(plenv init -)"; fi

# Renv setup
if which Renv > /dev/null; then eval "$(Renv init -)"; fi

# goenv setup
if which goenv > /dev/null; then eval "$(goenv init -)"; fi

# some vim niceties when ssh-ing 
alias xvim="LD_LIBRARY_PATH=${HOME}/software/gcc/gcc-4.8.4/lib64:${LD_LIBRARY_PATH} $(which nvim) -c 'set t_Co=256' -c 'color mustang'"
alias vim="LD_LIBRARY_PATH=${HOME}/software/gcc/gcc-4.8.4/lib64:${LD_LIBRARY_PATH} $(which nvim)"
alias nvim="LD_LIBRARY_PATH=${HOME}/software/gcc/gcc-4.8.4/lib64:${LD_LIBRARY_PATH} $(which nvim)"
alias emacs="emacs -nw"
alias assh="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

# setup JAVA
export JAVA_HOME=/gapp/x64linux/opt/java/jdk/jdk1.8.0_60
export PATH=$JAVA_HOME/bin:$PATH

# setup SCALA
export SCALA_HOME=${HOME}/software/scala/scala-2.11.8
export PATH=$SCALA_HOME/bin:$PATH

# setup ocaml (linus261 specific)
# opam config env --root $OPAMROOT
#export OPAMROOT=/home/archive/ocaml-4.04.0/root
#export PATH=/home/archive/ocaml-4.04.0/local/bin:$PATH
#source /home/archive/ocaml-4.04.0/root/opam-init/init.sh > /dev/null 2> /dev/null || true
